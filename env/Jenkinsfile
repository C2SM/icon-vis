pipeline {
    environment {
       PATH = "$WORKSPACE/miniconda/bin:$PATH"
       EMAIL_TO_1 = 'victoria.cherkas@meteoswiss.ch'
       EMAIL_TO_2 = ''
    }
    agent {
        label ('tsa || daint')
    }
    post {
        always{
            echo 'Cleaning up workspace'
            deleteDir()
        }
        success {  
            mail bcc: '', 
            body: "<b>Jenkins Success</b><br>Project: ${env.JOB_NAME}<br>Build Number: ${env.BUILD_NUMBER}<br>Build URL: ${env.BUILD_URL}" , 
            cc: "${EMAIL_TO_2}", charset: 'UTF-8', from: '', mimeType: 'text/html', 
            replyTo: '', subject: "Jenkins Job Success -> ${env.JOB_NAME}", 
            to: "${EMAIL_TO_1}"
            slackSend channel: "#icon-vis",  message:"ICON-Vis TestSuite Passed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        } 
        failure {  
            mail bcc: '', 
            body: "<b>Jenkins Failure</b><br>Project: ${env.JOB_NAME}<br>Build Number: ${env.BUILD_NUMBER}<br>Build URL: ${env.BUILD_URL}" , 
            cc: "${EMAIL_TO_2}", charset: 'UTF-8', from: '', mimeType: 'text/html', 
            replyTo: '', subject: "Jenkins Job Failure -> ${env.JOB_NAME}", 
            to: "${EMAIL_TO_1}" 
            slackSend failOnError:true, channel: "#icon-vis", message:"ICON-Vis TestSuite Failed  - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)";
        }  
    }
    stages {  
        stage('Test') {  
            steps {  
                sh 'echo "Fail!"; exit 1'  
            }  
        }  
    } 
    // stages {
    //     stage('setup miniconda') {
    //         steps {
    //             sh 'wget -O ${WORKSPACE}/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh'
    //             sh 'bash miniconda.sh -b -p $WORKSPACE/miniconda'
    //             sh 'conda config --set always_yes yes --set changeps1 no'
    //             sh 'conda config --add channels conda-forge'
    //             sh 'conda env create --name psyplot_${NODE_NAME} --file env/environment.yml'
    //             sh 'source $WORKSPACE/miniconda/etc/profile.d/conda.sh'
    //             sh 'conda activate psyplot_${NODE_NAME}'
    //             sh 'source env/setup-conda-env.sh'
    //             sh 'conda deactivate'
    //             sh 'rm miniconda.sh'

    //         }        
    //     }
    //     stage('test') {
    //         steps {
    //             sh 'source $WORKSPACE/miniconda/etc/profile.d/conda.sh'
    //             sh 'conda activate psyplot_${NODE_NAME}'
    //             sh 'python -m cfgrib selfcheck'
    //             sh 'pytest testsuite/test*'
    //         }
    //     }
    // }
}
